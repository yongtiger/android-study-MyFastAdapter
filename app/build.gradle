apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "cc.brainbook.android.study.myfastadapter"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    ///[LeakCanary] A memory leak detection library. https://github.com/square/leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    ///Optional, if you use support library fragments:
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'

    ///
//    The library is split up into core, commons, and extensions. The core functions are included in the following dependency.
    implementation 'com.mikepenz:fastadapter:3.2.9'
    implementation  'com.android.support:appcompat-v7:28.0.0'
    implementation  'com.android.support:recyclerview-v7:28.0.0'

//    The commons package comes with some useful helpers (which are not needed in all cases) This one for example includes the FastItemAdapter
    implementation 'com.mikepenz:fastadapter-commons:3.2.9'

//    Expandable support is included and can be added via this
    implementation 'com.mikepenz:fastadapter-extensions-expandable:3.2.9'
//The tiny Materialize library used for its useful helper classes
//    implementation 'com.mikepenz:materialize:${latestVersion}'

//    Many helper classes are included in the following dependency. (This functionality also needs the Expandable extension
    implementation 'com.mikepenz:fastadapter-extensions:3.2.9'
    implementation  'com.android.support:design:28.0.0'
//The tiny Materialize library used for its useful helper classes
//    implementation 'com.mikepenz:materialize:${latestVersion}'

    // used to base on some backwards compatible themes
    // contains util classes to support various android versions, and clean up code
    // comes with the awesome "Holder"-Pattern
    // https://github.com/mikepenz/Materialize
    implementation 'com.mikepenz:materialize:1.1.2@aar'

    //////////////////
    //used to generate the drawer on the left
    //https://github.com/mikepenz/MaterialDrawer
    implementation('com.mikepenz:materialdrawer:6.0.7@aar') {
        transitive = true
        exclude group: "com.mikepenz"
    }


    ///[RecyclerView Animators#Item Animation]
    ///https://github.com/mikepenz/ItemAnimators
    ///Note: does not animate items on scroll, just when added, removed, moved, or changed
    implementation 'com.mikepenz:itemanimators:1.0.2@aar'

    ///[RecyclerView Animators#Scroll Animation]
    ///https://github.com/wasabeef/recyclerview-animators/tree/2.3.0
    implementation 'jp.wasabeef:recyclerview-animators:2.3.0'
}
